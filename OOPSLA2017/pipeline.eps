%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 751.000000 65.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.4 (Build 16E195) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 451 40
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 451 40
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: Helvetica
%!FontType1-1.0: Helvetica 1.0000.0.0000
14 dict begin/FontName /Helvetica def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /S put
dup 34 /E put
dup 35 /D put
dup 36 /L put
dup 37 /e put
dup 38 /s put
dup 39 /u put
dup 40 /g put
dup 41 /a put
dup 42 /r put
dup 43 /i put
dup 44 /n put
dup 45 /l put
dup 46 /b put
dup 47 /o put
dup 48 /t put
dup 49 /I put
dup 50 /p put
dup 51 /F put
dup 52 /lambda put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1947 1 index div -985 2 index div 2961 3 index div 2297 5 -1 roll div]cvx def
/sfnts [<

002A002A002A002A40292A292827262524232221201F1E1D1C1B1A191817161514131211100D0C0B0A090807060504030201002C4523466020B02660B004262348482D2C452346236120B02661B004262348482D2C45234660B0206120B04660B004262348482D2C4523462361B0206020B02661B02061B004262348482D2C45234660B0406120B06660B004262348482D2C4523462361B0406020B02661B04061B004262348482D2C0110203C003C2D2C20452320B0CD442320B8015A51582320B08D44235920B0ED51582320B04D44235920B09051582320B00D44235921212D2C20204518684420B001602045B04676688A4560442D2C01B9400000000A2D2C00B9000040000B2D2C2045B00043617D6818B0004360442D2C45B01A234445B01923442D2C2045B00325456164B050515845441B2121592D2C20B0032552582359212D2C69B04061B0008B0C6423648BB8400062600C642364615C58B0036159B002602D2C45B0112BB0172344B0177AE5182D2C45B0112BB01723442D2C45B0112BB017458CB0172344B0177AE5182D2CB002254661658A46B040608B482D2CB0022546608A46B040618C482D2C4B53205C58B002855958B00185592D2C20B0032545B019236A4445B01A23444565234520B00325606A20B009234223688A6A606120B0005258B21A401A4523614459B0005058B219401945236144592D2CB9187E3B210B2D2CB92D412D410B2D2CB93B21187E0B2D2CB93B21E7830B2D2CB92D41D2C00B2D2CB9187EC4E00B2D2C4B525845441B2121592D2C0120B003252349B04060B0206320B000525823B002253823B002256538008A63381B212121212159012D2C456920B00943B0022660B00325B005254961B0805358B21940194523616844B21A401A4523606A44B209191A45652345604259B00943608A103A2D2C01B005251023208AF500B0016023EDEC2D2C01B005251023208AF500B0016123EDEC2D2C01B0062510F500EDEC2D2C20B001600110203C003C2D2C20B001610110203C003C2D2C764520B003254523616818236860442D2C7645B00325452361682318456860442D2C7645B0032545616823452361442D2C4569B014B0324B505821B0205961442DB8002B2C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB8002C2C2020456944B001602DB8002D2CB8002C2A212DB8002E2C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB8002F2C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800302C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800312C2020456944B0016020







00>] def
/CharStrings 22 dict dup begin
/.notdef 0 def
/D 1 def
/E 2 def
/F 3 def
/I 4 def
/L 5 def
/S 6 def
/a 7 def
/b 8 def
/e 9 def
/g 10 def
/i 11 def
/l 12 def
/n 13 def
/o 14 def
/p 15 def
/r 16 def
/s 17 def
/t 18 def
/u 19 def
/lambda 20 def
/u20B8 21 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1947 -985 2961 2297}def
/UniqueID 4003230 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C92608F4984E4A5769B1336AE461E05CD208550769783E471D7C20DE95AF8A53A6D2A584B1F0B488F7E27815CA8410608855FB53345E9B4D296935EEB7A3352BCEAA1B3D4486C7D645731276E59982CC37D7F2FA7EF6EDCE706CBDAC24BEFDEA2AE7E3BA41EDFBD1D05607B74998AE8473CCA5186E53BCC9B22059AD2DC0D29CA5F097079DD3165CDAA4C1EA5627F4B49475510F68037C68ECE70B410969CA33AA84DFA73DC9724F346BDBE10AF2C0380AB4F5EA9D05C30BABC7A3C04C4EEF23E547E742DB59D48002A7586853505E21CFA0179DC2C8819F923B3E91706AB5777FB4B411E66F990C7CF3AD04A4C87E51DA8B2CB5AE15CC12580DE0D450EAD389BB041E681E7965EE75ECE5178473BB41F6700367B1C35924BC53DA55A6A7B7438C204B2E96BA83C584BC06819FE361F8EAD7A2A585C79B8B8967F4FB203E5639A921DC87C21A833ACF22480C0D665AF37CF3488A2E745248DD5F7FD609C5DDF78A0DCFCF1C6D4E5079619C4B22C7FD671BE291F7A144D5ED56F15F3BC5C589EC9D61B2AE335CC884F474C521A21651E6B08AF2347D176225EDB12E5B409DB3571A2346CB5713C5BE5C914E26B2C93CDE703AB2122D7749704783E09A3193A1BF30BAB4081222A81E90C3B6CD910705A55D3EE2B1B5C552148F75CA8217CB3F526F98D52ED553F07984AF120D519CA96B56F8DD39506EC3A14831A325DB31A0CD5D271F579E2E6DBEB4D2D8A50A7DA0B23DD163A995267FDC68A10C9E724283EB0E3
961402B993EADC7009D78A7CECFA664F38D830AE589663E27D5689E75209E1E9F65DB49D8DC1739FB4EC4FC226F0495D069B5C469FB0CBB8704A7DE847322D4C3134CB86022CD545683D2C247A9E33FE7D95B1AFF6D66D1596C497123E92A0E7EFA7DDF7A6A91A5C0F03A6E390ADB3FAC6F221FBBCDCC05E869004802FEDBD1342867990203AFB085C546A526839DD87F6A54A9A24F42C760D061FE9B076DC8BF4130EDA80DD43D55FDC44DF90174FBC4B732EA7C3DB95B8296C05D43B6BCAB7522921A650DECC12DADC6C0941578DAB3084FA7EAADB4D8B27B78511DCDDD543A306EA6661A64F713D23DC3F3FC167CECBC9B572D740B6217D99989825D267CF997E4A050FF78AE559BB52EE0439B6176D9F45841CB7DC5A593055AD6659CE62874AC5B6B109ACB3CA81040A42E32FBC3640EBE15CD78B6DE34E2A1CE769B5DAF52674C0FB0039D87EAFB1A6ED8FA0B05127721011A8419997CBB2D3CCCC639D985F22F39231817031656CFE0A2DA2C6E0428438473D433234EDD4B04CEF0004D96C315FEDFE2CBA61E7A101A9E72EE7190EB8DBB5A1D02DBA7D6629DBD6BE1392B441BA33856ED2F3F4992F92CE55E2052709654989844981FDBCFDB9FC73FB78A0067AA6B030D05FC3DC00782615DBB4FB162860D95255C19B631A50F7764E900F000082E494A5F6A6DB8BF12E68BDF62115CADE4C76A5CBECBDDBE667963331502362A0A831F52167407640601E98E10D31CDA68A45CBEB80CADEA0B9361BC5322777E9682B9CB1CEA4B98CE69CBEB18AF99111B6BA03EC0DBAECF0C38F3680023D3601C070F81C16799C574E755C5D5B2A1AABFF8CE4D1FFCBA91829FE4113994C05939DF25E80056A023E37CB05ABCADC2E2436D14845932C798CEA109F665A5E8905D1C404D5FC6D98AA9C65EFAE778DE6AACFF85AF9B8B3AC7B389E310AC144C82D8457717580BBDD8FB08B6C25C6B96F2D45771132AB0B133D4034F9F90AE3C84BD51CA520B5CB5A8CCC69B44D58904D990BD883ADFC4A800B4874AC35B06C644B4CC102670A195DAF2BCD65943B896317FA1C6FA50D46F9F2A98BB28023091D9C144C4033F8B2CB781903F63F3AA0BBBD8C537E3A019F9BF081DEA690D917F214B0F260B326DEC7FD0C0655CBC49942A401C72E6B185D6B59DA795F38FBD6A18DDC56C9244934BD78E3D2A5A3DDC8B4D889E8918969E1DA744BB63BE575675578BEA3F06C718EB873A7E6BDAAE8B66291A1E46250822BA9D935E372F42A36FFD6EC7B72B6DCBB4894993901D1CB1CEE610D147E6521E55AC2AC38D31101E7303A948BBF82F50E0B1D8D026F222A5FA0F86994B2D2E8D2461C773153138F3DEACF8EFCB10EAC94C95485FA8C2DD7FDE2198DD3C47DBEC844DE9B7396A1303ED307FADD72D4CDD48B10E1863155650AB16FAB36E3885E413D0E035C4C

9D302482FB0A417009026DD28343C583C9C16D9B24F1D1338615BCC1C2D5E52E6E92C6B4710BB982E02411996BC1C61D4B57E7B44240DA097A369C2233A4782F83C37D437D58AB83E75544C5B8ADF0585F9D2B4E3FA72FB6337B999E41E00A00ED38D29C3AB9761F4397D2AFA126D2AD8EE38A9E351D2F2794C023F7E3310658EF36CB562FFB2FF02A1F1808B284E0617658427D0C0048ECE911D7E1A78A01DD1007F98DF17551E3FF75F8E297EB3F002B6EB22CDE36AFA6A717D8CD63F16F0179F3C75093AD027F32574E7C6B1884F9393B4FDF45A3519F197D7033663ADB4F811A9F30389A688E54E40983FB7586D388237AA4D342F6890AC9F6F8D2770795747258DDBCE82E2A9871BB6971EC8ED665FBADE570F671088B863E11495A88BF4EBB265DA464FE6E4929C55F609C0A267C03C34A7A25A95C0A6C90B0BBA97D1FA912A1BC634C3A301FF38C3B1CFA73D773E201385735F74DE856E820924062307F71F0A2C1F87E3ABB0C784452D84BB803144A5A8019E5B7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Helvetica cguidfix
/F1.1/Helvetica renmfont
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /A put
dup 34 /S put
dup 35 /T put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<


000000000000000501F400330288FFFA02880025023E000204BE0037000000480078010C013201680001000000050096000900680004000200000000001E00000200042800030001B800142B01BA0002000200162B01BF0003003E0037002B001F00130000001C2B00BF0002004A0037002B001F00130000001C2B00BA00040004001B2BB8000120457D691844B8000A2BB800002B000000
00>] def
/CharStrings 5 dict dup begin
/.notdef 0 def
/A 1 def
/S 2 def
/T 3 def
/uni2B91 4 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4243299 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C959DCA2B25064CB2EE653C8C5E0D08068DD956094993D87692D1893E7882B3267FBEDEB677400A54C3FF791059355FC781EA890EE12CE6212CB47D9946BF6264598FD8C1A7061938A62AD044A2F5F8E09C56F51E3F574CE651955DA86EE9B7C8637A112CDC10EC98B6F44EFFF408A83861FF8FC3979F546A47325B9D47387821D032F57A4169081C6661ADBEF0DC0BDD64D3594C9E5C0BFF87C92E9D1C0C90F97C59E50BF808924F474FA4071F08D604E0524B23901883A01D15461A76E1E8AB53CAC87C408B45DF172F8B2EA64BD720F5C6D9C14E72950AEA65D964368FAFCDECE6927EF68658AA1A58992AE3CA006A704D872BA7F6AC244C0CD1020AB39C4539FA77061E439AF71E2D7C067EB91EF42CB1EDEE8B8B8B00750CC35E8C7A715542C7ACFBBD33EFE1E3FAA59E704A2B2A4E0CBCAB46728B69484A046EA81FC2D601DBD63A7346DD603CA003BF619EB23AB33AB5942BBE9E278B002A48034B53ED63FEF636A2E49DC4949479844A52E429B55F42E0CFE70CD539E75552D6A1CA7B2F75B94C8B2EE2E03B7FC796FA88F87BBA64F9F116CCC7E00A06D69B886E0DDC698756938CA9782E81B7C8A8F18DC8A1E1529E505DB709D82A867338908FE83434CDA07E4FF1642E1631DA13521AC5CB5AFEB74F31216F55A272B87060068E0F57BABE5BEEE7D2AF060052C40A64D168633E91C3816DDCA2B86BCDA15B8F7590279C9ECA5ECBE1C7AEC99C5B292A9595E64C2F3F0B943D43A1FC2F38556A1F7D69
4E826AE7F3F32320A3E3DB90F763ED1CDB49D7797A8D1A2A2298482BDE77AFFB125F9BDD59BF366C0DC6904F41B3CBC2653F9A60A21F8A2EE6C29DDC284EE8EDA6D1147D03BDCCE931F46494D93403274D16295C3937E3105DAC1C5C97822C64DCC58C58E94A01BE4416E269B6CD3570E5662D13B5FF500F2251F9FBD5D1EDE8DC379B5BA3480D5DC82C68594DA64F8F3BE25DC7F2A1237A2594EEF1EBD35BA26D6B7F39172752147BC25C7E64EE7DEBCF1F71798449E8E4CE3752F2ED5E3B459093B7292BD16BB23547BDFF92DC03C0CC03E4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F2.1/HelveticaNeue renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs3 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 450.60001 39 rc
-4.2000003 59.400002 m
925.20001 59.400002 l
925.20001 -618.60004 l
-4.2000003 -618.60004 l
h
-4.2000003 59.400002 m
f
/Cs2 SC
80 0 0 29 368 1 cm
BI
/Width 240
/Height 87
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/DataSource cg_aiproc
ID
JcC<$JcC<$JcE"TJcC<$JcC<$JcE"TJcC<$JcC<$JcE"TJcC<$JcC<$JcE"TJcC<$JcC<$JcE"TJcC<$
JcC<$JcE"Th>d9LJc)\KJc()sJc+C&q#0%Kh>d9LJc)\KJc()sJc+C&q#0%Kh>d9LJc)\KJc()sJc+C&
q#0%Kk5Y5Ppu_A/eDBuVJ_oeNJ_kt7S_ihkeDBu[q""4Zn,MPMq"a^IptsTXpt^MXmG<ENJ_lsSn(lLM
pu;)>q#9a^k5Y5Ppu_A/eDBuVJ_oeNJ_kt7S_ihkeDBu[q""4Zn,MkVq#:'NpoX=^h4480pm:cFJXlG(
JXh:]SXf/:e=?</priI,n,MkVq#:'NpoX=^h4480pm:cFJXlG(JXh:]SXf/:e=?</priI,n,MkVq#:'N
poX=^h4480pm:cFJXlG(JXh:]SXf/:e=?</priI,n,MkVq#1!Fpmq27e:[OJJV3?BJV/N+JV2g3pl5'`
q"=+Un,N1]pttk;pkI:Npk"'Lm=TtBJV/N+hLkT_pqQUsn,MkVq#1!Fpmq27e:[OJJV3?BJV/N+JV2g3
pl5'`q"=+Un,N1\ptke9pk+-J[t'$[JUi<%hLPBZpqHOrn,MkVq#'pDpmh,3JUk4[JUi<%JUlU-pl"p]
q"=+Un,N1\ptke9pk+-J[t'$[JUi<%hLPBZpqHOrn,MkVq#'pDpmh,3JUk4[JUi<%JUlU-pl"p]q"=+U
n,N1\ptke9pk+-J[t'$[JUi<%hLPBZpqHOrn,MkVq#'pDpmh,3JUk4[JUi<%JUlU-pl"p]q"=+Un,N1\
ptke9pk+-J[t'$[JUi<%hLPBZpqHOrn,MkVq#'pDpmh,3JUk4[JUi<%JUlU-pl"p]q"=+Un,N1\ptke9
pk+-J[t'$[JUi<%hLPBZpqHOrn,MkVq#'pDpmh,3JUk4[JUi<%JUlU-pl"p]q"=+Un,N1\ptke9pk+-J
[t'$[JUi<%hLPBZpqHOrn,MkVq#'pDpmh,3JUk4[JUi<%JUlU-pl"p]q"=+Un,N1\ptke9pk+-J[t'$[
JUi<%hLPBZpqHOrn,MkVq#'pDpmh,3JUk4[JUi<%JUlU-pl"p]q"=+Un,N1\ptke9pk+-J[t'$[JUi<%
hLPBZpqHOrn,MkVq#'pDpmh,3JUk4[JUi<%JUlU-pl"p]q"=+Un,N1\ptke9pk+-J[t'$[JUi<%hLPBZ
pqHOrn,MkVq#'pDpmh,3JUk4[JUi<%JUlU-pl"p]q"=+Un,N1\ptke9pk+-J[t'$[JUi<%hLPBZpqHOr
n,MkVq#'pDpmh,3JUk4[JUi<%JUlU-pl"p]q"=+Un,N1\ptke9pk+-J[t'$[JUi<%hLPBZpqHOrn,MkV
q#'pDpmh,3JUk4[JUi<%JUlU-pl"p]q"=+Un,N1\ptke9pk+-J[t'$[JUi<%hLPBZpqHOrn,MkVq#'pD
pmh,3JUk4[JUi<%JUlU-pl"p]q"=+Un,N1\ptke9pk+-J[t'$[JUi<%hLPBZpqHOrn,MkVq#'pDpmh,3
JUk4[JUi<%JUlU-pl"p]q"=+Un,N1\ptke9pk+-J[t'$[JUi<%hLPBZpqHOrn,MkVq#'pDpmh,3JUk4[
JUi<%JUlU-pl"p]q"=+Un,N1\ptke9pk+-J[t'$[JUi<%hLPBZpqHOrn,MkVq#'pDpmh,3JUk4[JUi<%
JUlU-pl"p]q"=+Un,N1\ptke9pk+-J[t'$[JUi<%hLPBZpqHOrn,MkVq#'pDpmh,3JUk4[JUi<%JUlU-
pl"p]q"=+Un,N1\ptke9pk+-J[t'$[JUi<%hLPBZpqHOrn,MkVq#'pDpmh,3JUk4[JUi<%JUlU-pl"p]
q"=+Un,N1\ptke9pk+-J[t'$[JUi<%hLPBZpqHOrn,MkVq#'pDpmh,3JUk4[JUi<%JUlU-pl"p]q"=+U
n,N1\ptke9pk+-J[t'$[JUi<%hLPBZpqHOrn,MkVq#'pDpmh,3JUk4[JUi<%JUlU-pl"p]q"=+Un,N1\
ptke9pk+-J[t'$[JUi<%hLPBZpqHOrn,MkVq#'pDpmh,3JUk4[JUi<%JUlU-pl"p]q"=+Un,N1\ptke9
pk+-J[t'$[JUi<%hLPBZpqHOrn,MkVq#'pDpmh,3JUk4[JUi<%JUlU-pl"p]q"=+Un,N1\ptke9pk+-J
[t'$[JUi<%hLPBZpqHOrn,MkVq#'pDpmh,3JUk4[JUi<%JUlU-pl"p]q"=+Un,N1\ptke9pk+-J[t'$[
JUi<%hLPBZpqHOrn,MkVq#'pDpmh,3JUk4[JUi<%JUlU-pl"p]q"=+Un,N1\ptke9pk+-J[t'$[JUi<%
hLPBZpqHOrn,MkVq#'pDpmh,3JUk4[JUi<%JUlU-pl"p]q"=+Un,N1\ptke9pk+-J[t'$[JUi<%hLPBZ
pqHOrn,MkVq#'pDpmh,3JUk4[JUi<%JUlU-pl"p]q"=+Un,N1\ptke9pk+-J[t'$[JUi<%hLPBZpqHOr
n,MkVq#'pDpmh,3JUk4[JUi<%JUlU-pl"p]q"=+Un,N1\ptke9pk+-J[t'$[JUi<%hLPBZpqHOrn,MkV
q#'pDpmh,3JUk4[JUi<%JUlU-pl"p]q"=+Un,N1]pttk;pkI:Npk"'Lm=TtBJV/N+hLkT_pqQUsn,MkV
q#1!Fpmq27e:[OJJV3?BJV/N+JV2g3pl5'`q"=+Un,N1]pttk;pkI:Npk"'Lm=TtBJV/N+hLkT_pqQUs
n,MkVq#:'NpoX=^h4480pm:cFJXlG(JXh:]SXf/:e=?<0priI,n,MkVq#:'NpoX=^h4480pm:cFJXlG(
JXh:]SXf/:e=?<0priI,n,MkVq#:'NpoX=^h4480pm:cFJXlG(JXh:]SXf/:e=?<0priI,n,MPMq"a^I
ptsTXpt^MXmG<ENJ_lsSn(lLMpu;)>q#9a^k5Y5Ppu_A/eDBuVJ_oeNJ_kt7S_ihkeDBu[q""4Zn,MPM
q"a^IptsTXpt^MXmG<ENJ_lsSn(lLMpu;)>q#9a^h>d9KJc)\KJc()sJc+C&q#0%Kh>d9KJc)\KJc()s
Jc+C&q#0%Kh>d9KJc)\KJc()sJc+C&q#0%KJcC<$JcC<$JcE"TJcC<$JcC<$JcE"TJcC<$JcC<$JcE"T
J,
~> %APLeod
EI
80 0 0 29 240 1 cm
BI
/Width 240
/Height 87
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/DataSource cg_aiproc
ID
JcC<$JcC<$JcE"TJcC<$JcC<$JcE"TJcC<$JcC<$JcE"TJcC<$JcC<$JcE"TJcC<$JcC<$JcE"TJcC<$
JcC<$JcE"Th>d9KJc)\KJc()sJc+C&q#9+Lh>d9KJc)\KJc()sJc+C&q#9+Lh>d9KJc)\KJc()sJc+C&
q#9+Ln,N1^q""4>eDBZMJ_oeNJ_kt7S_j.teDBuXpu_AIk5XoMq#:'Zpu9f[n(iQOmG<ENJ_lsSptaHV
pttl/q"a(Pn,N1^q""4>eDBZMJ_oeNJ_kt7S_j.teDBuXpu_AIk5XoMq"OR,pnQ?/n!S`sm@8`tJXiU-
pm_&Fpm^*0pmq2^pu_ANn,MkVq"OR,pnQ?/n!S`sm@8`tJXiU-pm_&Fpm^*0pmq2^pu_ANn,MkVq"OR,
pnQ?/n!S`sm@8`tJXiU-pm_&Fpm^*0pmq2^pu_ANn,MkVq"=Espl0iWY(M:XJV0MGpk%"JpkJR7pttlF
n,MkVq"=Espl0iWY(M:XJV0MGpk%"JpkJR7pttlFn,MkVq"=Espl0iWY(M:XJV0MGpk%"JpkJR7pttlF
n,MkVq"=Erpks]RY(2(RJUi<%kCE>[pmh-9q#'U\n,N1UpqHN]JUjnRJUi<%JUlp6pk/@3ptkfDn,MkV
q"=Erpks]RY(2(RJUi<%kCE>[pmh-9q#'U\n,N1UpqHN]JUjnRJUi<%JUlp6pk/@3ptkfDn,MkVq"=Er
pks]RY(2(RJUi<%kCE>[pmh-9q#'U\n,N1UpqHN]JUjnRJUi<%JUlp6pk/@3ptkfDn,MkVq"=Erpks]R
Y(2(RJUi<%kCE>[pmh-9q#'U\n,N1UpqHN]JUjnRJUi<%JUlp6pk/@3ptkfDn,MkVq"=Erpks]RY(2(R
JUi<%kCE>[pmh-9q#'U\n,N1UpqHN]JUjnRJUi<%JUlp6pk/@3ptkfDn,MkVq"=Erpks]RY(2(RJUi<%
kCE>[pmh-9q#'U\n,N1UpqHN]JUjnRJUi<%JUlp6pk/@3ptkfDn,MkVq"=Erpks]RY(2(RJUi<%kCE>[
pmh-9q#'U\n,N1UpqHN]JUjnRJUi<%JUlp6pk/@3ptkfDn,MkVq"=Erpks]RY(2(RJUi<%kCE>[pmh-9
q#'U\n,N1UpqHN]JUjnRJUi<%JUlp6pk/@3ptkfDn,MkVq"=Erpks]RY(2(RJUi<%kCE>[pmh-9q#'U\
n,N1UpqHN]JUjnRJUi<%JUlp6pk/@3ptkfDn,MkVq"=Erpks]RY(2(RJUi<%kCE>[pmh-9q#'U\n,N1U
pqHN]JUjnRJUi<%JUlp6pk/@3ptkfDn,MkVq"=Erpks]RY(2(RJUi<%kCE>[pmh-9q#'U\n,N1UpqHN]
JUjnRJUi<%JUlp6pk/@3ptkfDn,MkVq"=Erpks]RY(2(RJUi<%kCE>[pmh-9q#'U\n,N1UpqHN]JUjnR
JUi<%JUlp6pk/@3ptkfDn,MkVq"=Erpks]RY(2(RJUi<%kCE>[pmh-9q#'U\n,N1UpqHN]JUjnRJUi<%
JUlp6pk/@3ptkfDn,MkVq"=Erpks]RY(2(RJUi<%kCE>[pmh-9q#'U\n,N1UpqHN]JUjnRJUi<%JUlp6
pk/@3ptkfDn,MkVq"=Erpks]RY(2(RJUi<%kCE>[pmh-9q#'U\n,N1UpqHN]JUjnRJUi<%JUlp6pk/@3
ptkfDn,MkVq"=Erpks]RY(2(RJUi<%kCE>[pmh-9q#'U\n,N1UpqHN]JUjnRJUi<%JUlp6pk/@3ptkfD
n,MkVq"=Erpks]RY(2(RJUi<%kCE>[pmh-9q#'U\n,N1UpqHN]JUjnRJUi<%JUlp6pk/@3ptkfDn,MkV
q"=Erpks]RY(2(RJUi<%kCE>[pmh-9q#'U\n,N1UpqHN]JUjnRJUi<%JUlp6pk/@3ptkfDn,MkVq"=Er
pks]RY(2(RJUi<%kCE>[pmh-9q#'U\n,N1UpqHN]JUjnRJUi<%JUlp6pk/@3ptkfDn,MkVq"=Erpks]R
Y(2(RJUi<%kCE>[pmh-9q#'U\n,N1UpqHN]JUjnRJUi<%JUlp6pk/@3ptkfDn,MkVq"=Erpks]RY(2(R
JUi<%kCE>[pmh-9q#'U\n,N1UpqHN]JUjnRJUi<%JUlp6pk/@3ptkfDn,MkVq"=Erpks]RY(2(RJUi<%
kCE>[pmh-9q#'U\n,N1UpqHN]JUjnRJUi<%JUlp6pk/@3ptkfDn,MkVq"=Erpks]RY(2(RJUi<%kCE>[
pmh-9q#'U\n,N1UpqHN]JUjnRJUi<%JUlp6pk/@3ptkfDn,MkVq"=Erpks]RY(2(RJUi<%kCE>[pmh-9
q#'U\n,N1UpqHN]JUjnRJUi<%JUlp6pk/@3ptkfDn,MkVq"=Erpks]RY(2(RJUi<%kCE>[pmh-9q#'U\
n,N1UpqHN]JUjnRJUi<%JUlp6pk/@3ptkfDn,MkVq"=Erpks]RY(2(RJUi<%kCE>[pmh-9q#'U\n,N1U
pqHN]JUjnRJUi<%JUlp6pk/@3ptkfDn,MkVq"=Erpks]RY(2(RJUi<%kCE>[pmh-9q#'U\n,N1UpqHN]
JUjnRJUi<%JUlp6pk/@3ptkfDn,MkVq"=Espl0iWY(M:XJV0MGpk%"JpkJR7pttlFn,MkVq"=Espl0iW
Y(M:XJV0MGpk%"JpkJR7pttlFn,MkVq"=Espl0iWY(M:XJV0MGpk%"JpkJR7pttlFn,MkVq"OR,pnQ?/
n!S`sm@8`tJXiU-pm_&Fpm^*0pmq2^pu_ANn,MkVq"OR,pnQ?/n!S`sm@8`tJXiU-pm_&Fpm^*0pmq2^
pu_ANn,MkVq"OR,pnQ?/n!S`sm@8`tJXiU-pm_&Fpm^*0pmq2^pu_ANn,MkVq#:'Zpu0`Zn(iQOmG<EN
J_lsSptaHVpttl/q"a(Pn,N1^q""4=eDBZMJ_oeNJ_kt7S_j.teDBuXpu_AIk5XoMq#:'Zpu0`Zn(iQO
mG<ENJ_lsSptaHVpttl/q"a(Ph>d9KJc)\KJc()sJc+C&q#0%Kh>d9KJc)\KJc()sJc+C&q#0%Kh>d9K
Jc)\KJc()sJc+C&q#0%KJcC<$JcC<$JcE"TJcC<$JcC<$JcE"TJcC<$JcC<$JcE"TJ,
~> %APLeod
EI
80 0 0 29 108 1 cm
BI
/Width 240
/Height 87
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/DataSource cg_aiproc
ID
JcC<$JcC<$JcE"TJcC<$JcC<$JcE"TJcC<$JcC<$JcE"TJcC<$JcC<$JcE"TJcC<$JcC<$JcE"TJcC<$
JcC<$JcE"Th>d9KJc)\KJc()sJc+C&q#9+Lh>d9KJc)\KJc()sJc+C&q#9+Lh>d9KJc)\KJc()sJc+C&
q#9+Ln,N1^q""4>eDBZMJ_oeNJ_kt7S_j.teDBuXpu_AIk5XoMq#:'Zpu9f[n(iQOmG<ENJ_lsSptaHV
pttl/q"a(Pn,N1^q""4>eDBZMJ_oeNJ_kt7S_j.teDBuXpu_AIk5XoMq"OR,pnQ?/n!S`sm@8`tJXiU-
pm_&Fpm^*0pmq2^pu_ANn,MkVq"OR,pnQ?/n!S`sm@8`tJXiU-pm_&Fpm^*0pmq2^pu_ANn,MkVq"OR,
pnQ?/n!S`sm@8`tJXiU-pm_&Fpm^*0pmq2^pu_ANn,MkVq"=Espl0iWY(M:XJV0MGpk%"JpkJR7pttlF
n,MkVq"=Espl0iWY(M:XJV0MGpk%"JpkJR7pttlFn,MkVq"=Espl0iWY(M:XJV0MGpk%"JpkJR7pttlF
n,MkVq"=Erpks]RY(2(RJUi<%kCE>[pmh-9q#'U\n,N1UpqHN]JUjnRJUi<%JUlp6pk/@3ptkfDn,MkV
q"=Erpks]RY(2(RJUi<%kCE>[pmh-9q#'U\n,N1UpqHN]JUjnRJUi<%JUlp6pk/@3ptkfDn,MkVq"=Er
pks]RY(2(RJUi<%kCE>[pmh-9q#'U\n,N1UpqHN]JUjnRJUi<%JUlp6pk/@3ptkfDn,MkVq"=Erpks]R
Y(2(RJUi<%kCE>[pmh-9q#'U\n,N1UpqHN]JUjnRJUi<%JUlp6pk/@3ptkfDn,MkVq"=Erpks]RY(2(R
JUi<%kCE>[pmh-9q#'U\n,N1UpqHN]JUjnRJUi<%JUlp6pk/@3ptkfDn,MkVq"=Erpks]RY(2(RJUi<%
kCE>[pmh-9q#'U\n,N1UpqHN]JUjnRJUi<%JUlp6pk/@3ptkfDn,MkVq"=Erpks]RY(2(RJUi<%kCE>[
pmh-9q#'U\n,N1UpqHN]JUjnRJUi<%JUlp6pk/@3ptkfDn,MkVq"=Erpks]RY(2(RJUi<%kCE>[pmh-9
q#'U\n,N1UpqHN]JUjnRJUi<%JUlp6pk/@3ptkfDn,MkVq"=Erpks]RY(2(RJUi<%kCE>[pmh-9q#'U\
n,N1UpqHN]JUjnRJUi<%JUlp6pk/@3ptkfDn,MkVq"=Erpks]RY(2(RJUi<%kCE>[pmh-9q#'U\n,N1U
pqHN]JUjnRJUi<%JUlp6pk/@3ptkfDn,MkVq"=Erpks]RY(2(RJUi<%kCE>[pmh-9q#'U\n,N1UpqHN]
JUjnRJUi<%JUlp6pk/@3ptkfDn,MkVq"=Erpks]RY(2(RJUi<%kCE>[pmh-9q#'U\n,N1UpqHN]JUjnR
JUi<%JUlp6pk/@3ptkfDn,MkVq"=Erpks]RY(2(RJUi<%kCE>[pmh-9q#'U\n,N1UpqHN]JUjnRJUi<%
JUlp6pk/@3ptkfDn,MkVq"=Erpks]RY(2(RJUi<%kCE>[pmh-9q#'U\n,N1UpqHN]JUjnRJUi<%JUlp6
pk/@3ptkfDn,MkVq"=Erpks]RY(2(RJUi<%kCE>[pmh-9q#'U\n,N1UpqHN]JUjnRJUi<%JUlp6pk/@3
ptkfDn,MkVq"=Erpks]RY(2(RJUi<%kCE>[pmh-9q#'U\n,N1UpqHN]JUjnRJUi<%JUlp6pk/@3ptkfD
n,MkVq"=Erpks]RY(2(RJUi<%kCE>[pmh-9q#'U\n,N1UpqHN]JUjnRJUi<%JUlp6pk/@3ptkfDn,MkV
q"=Erpks]RY(2(RJUi<%kCE>[pmh-9q#'U\n,N1UpqHN]JUjnRJUi<%JUlp6pk/@3ptkfDn,MkVq"=Er
pks]RY(2(RJUi<%kCE>[pmh-9q#'U\n,N1UpqHN]JUjnRJUi<%JUlp6pk/@3ptkfDn,MkVq"=Erpks]R
Y(2(RJUi<%kCE>[pmh-9q#'U\n,N1UpqHN]JUjnRJUi<%JUlp6pk/@3ptkfDn,MkVq"=Erpks]RY(2(R
JUi<%kCE>[pmh-9q#'U\n,N1UpqHN]JUjnRJUi<%JUlp6pk/@3ptkfDn,MkVq"=Erpks]RY(2(RJUi<%
kCE>[pmh-9q#'U\n,N1UpqHN]JUjnRJUi<%JUlp6pk/@3ptkfDn,MkVq"=Erpks]RY(2(RJUi<%kCE>[
pmh-9q#'U\n,N1UpqHN]JUjnRJUi<%JUlp6pk/@3ptkfDn,MkVq"=Erpks]RY(2(RJUi<%kCE>[pmh-9
q#'U\n,N1UpqHN]JUjnRJUi<%JUlp6pk/@3ptkfDn,MkVq"=Erpks]RY(2(RJUi<%kCE>[pmh-9q#'U\
n,N1UpqHN]JUjnRJUi<%JUlp6pk/@3ptkfDn,MkVq"=Erpks]RY(2(RJUi<%kCE>[pmh-9q#'U\n,N1U
pqHN]JUjnRJUi<%JUlp6pk/@3ptkfDn,MkVq"=Erpks]RY(2(RJUi<%kCE>[pmh-9q#'U\n,N1UpqHN]
JUjnRJUi<%JUlp6pk/@3ptkfDn,MkVq"=Espl0iWY(M:XJV0MGpk%"JpkJR7pttlFn,MkVq"=Espl0iW
Y(M:XJV0MGpk%"JpkJR7pttlFn,MkVq"=Espl0iWY(M:XJV0MGpk%"JpkJR7pttlFn,MkVq"OR,pnQ?/
n!S`sm@8`tJXiU-pm_&Fpm^*0pmq2^pu_ANn,MkVq"OR,pnQ?/n!S`sm@8`tJXiU-pm_&Fpm^*0pmq2^
pu_ANn,MkVq"OR,pnQ?/n!S`sm@8`tJXiU-pm_&Fpm^*0pmq2^pu_ANn,MkVq#:'Zpu0`Zn(iQOmG<EN
J_lsSptaHVpttl/q"a(Pn,N1^q""4=eDBZMJ_oeNJ_kt7S_j.teDBuXpu_AIk5XoMq#:'Zpu0`Zn(iQO
mG<ENJ_lsSptaHVpttl/q"a(Ph>d9KJc)\KJc()sJc+C&q#0%Kh>d9KJc)\KJc()sJc+C&q#0%Kh>d9K
Jc)\KJc()sJc+C&q#0%KJcC<$JcC<$JcE"TJcC<$JcC<$JcE"TJcC<$JcC<$JcE"TJ,
~> %APLeod
EI
56 0 0 29 3 1 cm
BI
/Width 168
/Height 87
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/DataSource cg_aiproc
ID
JcC<$JcCT,JcC<$JcCT,JcC<$JcCT,JcC<$JcCT,JcC<$JcCT,JcC<$JcCT,k5Y5Tq"B:3Y4[A=[e9Fh
q"s4Rk5Y5Tq"B:3Y4[A=[e9Fhq"s4Rk5Y5Tq"B:3Y4[A=[e9Fhq"s4Rn,N1^q!@dqJ\J;$J\JS,pr)se
q"sO[n,N1^q!@dqJ\J;$J\JS,pr)seq"sO[n,N1^q!@dqJ\J;$J\JS,pr)seq"sO[n,N1\ptYY5JW$[h
JW$sppm1]uq"X=Xn,N1\ptYY5JW$[hJW$sppm1]uq"X=Xn,N1\ptYY5JW$[hJW$sppm1]uq"X=Xn,N1\
ptGM+JUjnRJUk1Zpl>-jq"X=Xn,N1\ptGM+JUjnRJUk1Zpl>-jq"X=Xn,N1\ptGM+JUjnRJUk1Zpl>-j
q"X=Xn,N1\ptGM+JUjnRJUk1Zpl>-kq"X=Xn,N1\ptGM+JUjnRJUk1Zpl>-kq"X=Xn,N1\ptGM+JUjnR
JUk1Zpl>-kq"X=Xn,N1\ptGM+JUjnRJUk1Zpl>-kq"X=Xn,N1\ptGM+JUjnRJUk1Zpl>-kq"X=Xn,N1\
ptGM+JUjnRJUk1Zpl>-kq"X=Xn,N1\ptGM+JUjnRJUk1Zpl>-kq"X=Xn,N1\ptGM+JUjnRJUk1Zpl>-k
q"X=Xn,N1\ptGM+JUjnRJUk1Zpl>-kq"X=Xn,N1\ptGM+JUjnRJUk1Zpl>-kq"X=Xn,N1\ptGM+JUjnR
JUk1Zpl>-kq"X=Xn,N1\ptGM+JUjnRJUk1Zpl>-kq"X=Xn,N1\ptGM+JUjnRJUk1Zpl>-kq"X=Xn,N1\
ptGM+JUjnRJUk1Zpl>-kq"X=Xn,N1\ptGM+JUjnRJUk1Zpl>-kq"X=Xn,N1\ptGM+JUjnRJUk1Zpl>-k
q"X=Xn,N1\ptGM+JUjnRJUk1Zpl>-kq"X=Xn,N1\ptGM+JUjnRJUk1Zpl>-kq"X=Xn,N1\ptGM+JUjnR
JUk1Zpl>-kq"X=Xn,N1\ptGM+JUjnRJUk1Zpl>-kq"X=Xn,N1\ptGM+JUjnRJUk1Zpl>-kq"X=Xn,N1\
ptGM+JUjnRJUk1Zpl>-kq"X=Xn,N1\ptGM+JUjnRJUk1Zpl>-kq"X=Xn,N1\ptGM+JUjnRJUk1Zpl>-k
q"X=Xn,N1\ptGM+JUjnRJUk1Zpl>-kq"X=Xn,N1\ptGM+JUjnRJUk1Zpl>-kq"X=Xn,N1\ptGM+JUjnR
JUk1Zpl>-kq"X=Xn,N1\ptGM+JUjnRJUk1Zpl>-kq"X=Xn,N1\ptGM+JUjnRJUk1Zpl>-kq"X=Xn,N1\
ptGM+JUjnRJUk1Zpl>-kq"X=Xn,N1\ptGM+JUjnRJUk1Zpl>-kq"X=Xn,N1\ptGM+JUjnRJUk1Zpl>-k
q"X=Xn,N1\ptGM+JUjnRJUk1Zpl>-kq"X=Xn,N1\ptGM+JUjnRJUk1Zpl>-kq"X=Xn,N1\ptGM+JUjnR
JUk1Zpl>-kq"X=Xn,N1\ptGM+JUjnRJUk1Zpl>-kq"X=Xn,N1\ptGM+JUjnRJUk1Zpl>-kq"X=Xn,N1\
ptGM+JUjnRJUk1Zpl>-kq"X=Xn,N1\ptGM+JUjnRJUk1Zpl>-kq"X=Xn,N1\ptGM+JUjnRJUk1Zpl>-k
q"X=Xn,N1\ptGM+JUjnRJUk1Zpl>-kq"X=Xn,N1\ptGM+JUjnRJUk1Zpl>-kq"X=Xn,N1\ptGM+JUjnR
JUk1Zpl>-kq"X=Xn,N1\ptGM+JUjnRJUk1Zpl>-kq"X=Xn,N1\ptGM+JUjnRJUk1Zpl>-kq"X=Xn,N1\
ptGM+JUjnRJUk1Zpl>-kq"X=Xn,N1\ptGM+JUjnRJUk1Zpl>-kq"X=Xn,N1\ptGM+JUjnRJUk1Zpl>-k
q"X=Xn,N1\ptGM+JUjnRJUk1Zpl>-kq"X=Xn,N1\ptGM+JUjnRJUk1Zpl>-kq"X=Xn,N1\ptGM+JUjnR
JUk1Zpl>-kq"X=Xn,N1\ptGM-JV1+XJV1C`plP9mq"X=Xn,N1\ptGM-JV1+XJV1C`plP9mq"X=Xn,N1\
ptGM-JV1+XJV1C`plP9mq"X=Xn,N1\pu(qHJXim5JXj0=pnmi6q"X=Xn,N1\pu(qHJXim5JXj0=pnmi6
q"X=Xn,N1\pu(qHJXim5JXj0=pnmi6q"X=Xk5Y5Mpu?q^Y24`d[bgf<q!n.Yn,MPMq"FLCJ_mQdJ_mil
pu2#<q#9a^k5Y5Mpu?q^Y24`d[bgf<q!n.Yn,M5Dq#,dAY5EkK[f#q!h>c=2q#,dAY5EkK[f#q!h>c=2
q#,dAY5EkK[f#q!h>`'+JcC<$M>r/,JcC<$M>r/,JcC<$M>r/,JcC<$M>r/,JcC<$M>r/,JcC<$M>r)
~> %APLeod
EI
/Cs1 SC
1 1 1 sc
CM
6.6000004 27.6 m
55.200001 27.6 l
55.200001 6.6000004 l
6.6000004 6.6000004 l
h
6.6000004 27.6 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
0.60000002 0 0 -0.60000002 -4.2000003 59.400002 cm
18 53 m
99 53 l
99 88 m
18 88 l
S
/Cs3 SC
0 sc
0 i
0.60000002 0 0 -0.60000002 30.900002 17.1 cm
/F1.1[ 15 0 0 -15 0 0]sf
-24.594727 6 m
(!"#"$)[ 10.004883 10.004883 10.832520 10.004883 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
111.60001 28.200001 m
183.60001 28.200001 l
183.60001 6.6000004 l
111.60001 6.6000004 l
h
111.60001 28.200001 m
f
0.60000002 i
0 0 0 sc
0.60000002 0 0 -0.60000002 -4.2000003 59.400002 cm
193 52 m
313 52 l
313 88 l
193 88 l
h
205 52 m
205 88 l
301 88 m
301 52 l
S
/Cs3 SC
0 sc
0 i
0.60000002 0 0 -0.60000002 147.60001 17.400002 cm
-38.356934 6 m
(#%&'\(\)*+,\()[ 10.832520 8.342285 7.500000 8.342285 8.342285 8.342285 4.995117 3.332520 8.342285 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
243.60001 28.200001 m
315.60001 28.200001 l
315.60001 6.6000004 l
243.60001 6.6000004 l
h
243.60001 28.200001 m
f
0.60000002 i
0 0 0 sc
0.60000002 0 0 -0.60000002 -4.2000003 59.400002 cm
413 52 m
533 52 l
533 88 l
413 88 l
h
425 52 m
425 88 l
521 88 m
521 52 l
S
/Cs3 SC
0 sc
0 i
0.60000002 0 0 -0.60000002 279.60001 17.400002 cm
-34.603271 6 m
("-\)./*\)0/*)[ 10.004883 3.332520 8.342285 8.342285 8.342285 4.995117 8.342285 4.167480 8.342285 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
372 28.200001 m
444.00003 28.200001 l
444.00003 6.6000004 l
372 6.6000004 l
h
372 28.200001 m
f
0.60000002 i
0 0 0 sc
0.60000002 0 0 -0.60000002 -4.2000003 59.400002 cm
627 52 m
747 52 l
747 88 l
627 88 l
h
639 52 m
639 88 l
735 88 m
735 52 l
S
/Cs3 SC
0 sc
0 i
0.60000002 0 0 -0.60000002 408.00003 17.400002 cm
-34.599609 6 m
(1,0%*2*%0%*)[ 4.167480 8.342285 4.167480 8.342285 4.995117 8.342285 4.995117 8.342285 4.167480 8.342285 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
0.60000002 0 0 -0.60000002 -4.2000003 59.400002 cm
99 70.5 m
183.10014 70.052658 l
S
0 i
CM
110.46002 17.393936 m
105.65051 19.168381 l
105.66966 15.568431 l
h
110.46002 17.393936 m
f
0 J
0 j
0.60000002 0 0 -0.60000002 -4.2000003 59.400002 cm
191.10002 70.010109 m
183.08418 67.052704 l
183.1161 73.05262 l
h
191.10002 70.010109 m
S
/Cs3 SC
0 sc
0.60000002 0 0 -0.60000002 81 24.900002 cm
/F2.1[ 13 0 0 -13 0 0]sf
-12.155 4.3180008 m
(!"#)[ 8.424000 8.424000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
0.60000002 0 0 -0.60000002 -4.2000003 59.400002 cm
313 70 m
403.10001 70 l
S
0 i
CM
242.46001 17.400002 m
237.66 19.200001 l
237.66 15.6 l
h
242.46001 17.400002 m
f
0 J
0 j
0.60000002 0 0 -0.60000002 -4.2000003 59.400002 cm
411.10001 70 m
403.10001 67 l
403.10001 73 l
h
411.10001 70 m
S
1 J
1 j
0.60000002 i
533 70 m
617.09998 70 l
S
0 i
CM
370.86002 17.400002 m
366.06003 19.200001 l
366.06003 15.6 l
h
370.86002 17.400002 m
f
0 J
0 j
0.60000002 0 0 -0.60000002 -4.2000003 59.400002 cm
625.09998 70 m
617.09998 67 l
617.09998 73 l
h
625.09998 70 m
S
/Cs3 SC
0 sc
0.60000002 0 0 -0.60000002 213.60001 25.500002 cm
/F1.1[ 13 0 0 -13 0 0]sf
-5.5 4.5 m
(3)s
2.440918 5.5 m
(+)s
0.60000002 0 0 -0.60000002 344.70001 24.900002 cm
-4 5 m
(4)s
ep
end
%%Trailer
%%EOF
