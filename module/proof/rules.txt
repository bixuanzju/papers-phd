=================
Subtyping (source-target)
=================

D ::= . | E, D
F ::= . | x : E, F

------------------
D & F |- e <|  A <: B  |> e'
------------------

D & F |- e <|  x <: x  |> e   SVar


. & F |- e <|  * <: *   |> e   SStar


. & F |- x <|  A' <: A  |> e1             . |- e e1 <|  B <: B' |> e2
----------------------------------------------------  SPi
. & F |- e <|  forall (x : A). B <: forall (x : A') . B'  |> \x . e2


D & x:T,F |- castDown e <|  A <: B  |> e'
--------------------------------  SLam
T,D & F  |- e  <|  \x. A <: \x . B  |> castUp e'


T,D & T |- e  <|  A <: B  |> e'
--------------------- SApp
D & F |- e  <|  A T <: B T  |> e'



. & F |- fst e <|  A <: C  |> e'
-------------------- S&L1
. & F |- e <|  A & B <: C  |> e'


. & F |- snd e <|  B <: C  |> e'
-------------------- S&L2
. & F |- e <|  A & B <: C  |> e'


. & F |- e <|  A <: B  |> e1       . & F |- e <|  A <: C  |> e2
---------------------------------------- S&R
. & F |- e <|  A <: B & C  |> (e1,e2)


=================
Bidirectional Typing (source-target)
=================

------------------
Ctx |- E <=> T ~> e
------------------


WF Ctx
-------------------- Star
Ctx |- * => * ~> *


WF Ctx     (x,ty) in Ctx
-------------------------- Var
Ctx |- x => ty ~> x


Ctx |- A <= * ~> t1          Ctx, x:A |- B <= * ~> t2
------------------------------------------------------- Pi
Ctx |- Pi x : A . B  => Pi x : t1 . t2


Ctx |- E1 => Pi x : A . B ~> e1      Ctx |- E2 <= A ~> e2
---------------------------------------------------------- App
Ctx |- E1 E2 => B[x |-> E2] ~> e1 e2


Ctx |- A <= * ~> t1       Ctx |- B <= * ~> t2
---------------------------------------------- And
Ctx |- A & B => * ~> t1 * t2



Ctx |- E1 <= A ~> e1       Ctx |- E2 <= B ~> e2
---------------------------------------------- And
Ctx |- E1,,E2 => A & B ~> (e1,e2)


Ctx |- A <= T ~> e        Ctx |- T <= * ~> e'
---------------------------------------------- Ann
Ctx |-  A :: T => T ~> e


Ctx |- Pi x : A . B <= * ~> e       Ctx, x : A |- t <= B ~> t1
-------------------------------------------------------------- Lam
Ctx |- \ x . t <= Pi x : A . B  ~> \x . t1


Ctx |- A => B ~> a        . & . |- a <| B <: C |> a'
----------------------------------------------------- Sub
Ctx |- A <= C ~> a'



=================
Well-formedness of context
=================

------------------
WF Ctx
------------------

-------
WF empty


x fresh        Ctx |- U <= * ~> e
----------------------------------------
WF (Ctx, x : U)
